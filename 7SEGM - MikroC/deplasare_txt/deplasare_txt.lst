;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13.01.2022 12:18:46
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x020327  	LJMP 807
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020000  	LJMP 0
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
__shr_longword:
;__Lib_Math.c,75 :: 		
;__Lib_Math.c,77 :: 		
0x002E	0xEC      	MOV A, R4
;__Lib_Math.c,78 :: 		
0x002F	0x600F    	JZ lab_end2
;__Lib_Math.c,79 :: 		
lab_loop3:
;__Lib_Math.c,80 :: 		
0x0031	0xEB      	MOV A, R3
;__Lib_Math.c,81 :: 		
0x0032	0xC3      	CLR C
;__Lib_Math.c,82 :: 		
0x0033	0x13      	RRC A
;__Lib_Math.c,83 :: 		
0x0034	0xFB      	MOV R3, A
;__Lib_Math.c,84 :: 		
0x0035	0xEA      	MOV A, R2
;__Lib_Math.c,85 :: 		
0x0036	0x13      	RRC A
;__Lib_Math.c,86 :: 		
0x0037	0xFA      	MOV R2, A
;__Lib_Math.c,87 :: 		
0x0038	0xE9      	MOV A, R1
;__Lib_Math.c,88 :: 		
0x0039	0x13      	RRC A
;__Lib_Math.c,89 :: 		
0x003A	0xF9      	MOV R1, A
;__Lib_Math.c,90 :: 		
0x003B	0xE8      	MOV A, R0
;__Lib_Math.c,91 :: 		
0x003C	0x13      	RRC A
;__Lib_Math.c,92 :: 		
0x003D	0xF8      	MOV R0, A
;__Lib_Math.c,93 :: 		
0x003E	0xDCF1    	DJNZ R4, lab_loop3
;__Lib_Math.c,94 :: 		
lab_end2:
;__Lib_Math.c,96 :: 		
0x0040	0x22      	RET
; end of __shr_longword
_SPI1_Write:
;__Lib_SPI_SPCR.c,51 :: 		
;__Lib_SPI_SPCR.c,59 :: 		
0x0041	0x852886  	MOV SPDR, FARG_SPI1_Write_data_out+0
;__Lib_SPI_SPCR.c,60 :: 		
0x0044	0xE5AA    	MOV A, SPSR
0x0046	0x30E60A  	JNB ACC.B6, L_SPI1_Write0
;__Lib_SPI_SPCR.c,61 :: 		
L_SPI1_Write1:
0x0049	0xE5AA    	MOV A, SPSR
0x004B	0x20E702  	JB ACC.B7, L_SPI1_Write2
;__Lib_SPI_SPCR.c,62 :: 		
0x004E	0x80F9    	SJMP L_SPI1_Write1
L_SPI1_Write2:
;__Lib_SPI_SPCR.c,63 :: 		
0x0050	0x852886  	MOV SPDR, FARG_SPI1_Write_data_out+0
;__Lib_SPI_SPCR.c,64 :: 		
L_SPI1_Write0:
;__Lib_SPI_SPCR.c,65 :: 		
L_SPI1_Write3:
0x0053	0xE5AA    	MOV A, SPSR
0x0055	0x20E702  	JB ACC.B7, L_SPI1_Write4
;__Lib_SPI_SPCR.c,66 :: 		
0x0058	0x80F9    	SJMP L_SPI1_Write3
L_SPI1_Write4:
;__Lib_SPI_SPCR.c,67 :: 		
0x005A	0x858629  	MOV SPI1_Write_tmp_L0, SPDR+0
;__Lib_SPI_SPCR.c,68 :: 		
0x005D	0x22      	RET
; end of _SPI1_Write
_Mul_32x32:
;__Lib_Math.c,141 :: 		
;__Lib_Math.c,143 :: 		
0x005E	0xEF      	MOV A, R7
;__Lib_Math.c,144 :: 		
0x005F	0x88F0    	MOV B, R0
;__Lib_Math.c,145 :: 		
0x0061	0xA4      	MUL AB
;__Lib_Math.c,146 :: 		
0x0062	0xCB      	XCH A, R3
;__Lib_Math.c,147 :: 		
0x0063	0x8CF0    	MOV B, R4
;__Lib_Math.c,148 :: 		
0x0065	0xA4      	MUL AB
;__Lib_Math.c,149 :: 		
0x0066	0x2B      	ADD A, R3
;__Lib_Math.c,150 :: 		
0x0067	0xFB      	MOV R3, A
;__Lib_Math.c,151 :: 		
0x0068	0xEE      	MOV A, R6
;__Lib_Math.c,152 :: 		
0x0069	0x89F0    	MOV B, R1
;__Lib_Math.c,153 :: 		
0x006B	0xA4      	MUL AB
;__Lib_Math.c,154 :: 		
0x006C	0x2B      	ADD A, R3
;__Lib_Math.c,155 :: 		
0x006D	0xFB      	MOV R3, A
;__Lib_Math.c,156 :: 		
0x006E	0x8DF0    	MOV B, R5
;__Lib_Math.c,157 :: 		
0x0070	0xEA      	MOV A, R2
;__Lib_Math.c,158 :: 		
0x0071	0xA4      	MUL AB
;__Lib_Math.c,159 :: 		
0x0072	0x2B      	ADD A, R3
;__Lib_Math.c,160 :: 		
0x0073	0xFB      	MOV R3, A
;__Lib_Math.c,161 :: 		
0x0074	0xED      	MOV A, R5
;__Lib_Math.c,162 :: 		
0x0075	0x89F0    	MOV B, R1
;__Lib_Math.c,163 :: 		
0x0077	0xA4      	MUL AB
;__Lib_Math.c,164 :: 		
0x0078	0xCA      	XCH A, R2
;__Lib_Math.c,165 :: 		
0x0079	0xAFF0    	MOV R7, B
;__Lib_Math.c,166 :: 		
0x007B	0x8CF0    	MOV B, R4
;__Lib_Math.c,167 :: 		
0x007D	0xA4      	MUL AB
;__Lib_Math.c,168 :: 		
0x007E	0x2A      	ADD A, R2
;__Lib_Math.c,169 :: 		
0x007F	0xCB      	XCH A, R3
;__Lib_Math.c,170 :: 		
0x0080	0x3F      	ADDC A, R7
;__Lib_Math.c,171 :: 		
0x0081	0x25F0    	ADD A, B
;__Lib_Math.c,172 :: 		
0x0083	0xFA      	MOV R2, A
;__Lib_Math.c,173 :: 		
0x0084	0xEE      	MOV A, R6
;__Lib_Math.c,174 :: 		
0x0085	0x88F0    	MOV B, R0
;__Lib_Math.c,175 :: 		
0x0087	0xA4      	MUL AB
;__Lib_Math.c,176 :: 		
0x0088	0x2B      	ADD A, R3
;__Lib_Math.c,177 :: 		
0x0089	0xCA      	XCH A, R2
;__Lib_Math.c,178 :: 		
0x008A	0x35F0    	ADDC A, B
;__Lib_Math.c,179 :: 		
0x008C	0xFB      	MOV R3, A
;__Lib_Math.c,180 :: 		
0x008D	0xEC      	MOV A, R4
;__Lib_Math.c,181 :: 		
0x008E	0x89F0    	MOV B, R1
;__Lib_Math.c,182 :: 		
0x0090	0xA4      	MUL AB
;__Lib_Math.c,183 :: 		
0x0091	0xF9      	MOV R1, A
;__Lib_Math.c,184 :: 		
0x0092	0xAEF0    	MOV R6, B
;__Lib_Math.c,185 :: 		
0x0094	0xEC      	MOV A, R4
;__Lib_Math.c,186 :: 		
0x0095	0x88F0    	MOV B, R0
;__Lib_Math.c,187 :: 		
0x0097	0xA4      	MUL AB
;__Lib_Math.c,188 :: 		
0x0098	0xC8      	XCH A, R0
;__Lib_Math.c,189 :: 		
0x0099	0xC5F0    	XCH A, B
;__Lib_Math.c,190 :: 		
0x009B	0x29      	ADD A, R1
;__Lib_Math.c,191 :: 		
0x009C	0xCA      	XCH A, R2
;__Lib_Math.c,192 :: 		
0x009D	0x3E      	ADDC A, R6
;__Lib_Math.c,193 :: 		
0x009E	0xF9      	MOV R1, A
;__Lib_Math.c,194 :: 		
0x009F	0xE4      	CLR A
;__Lib_Math.c,195 :: 		
0x00A0	0x3B      	ADDC A, R3
;__Lib_Math.c,196 :: 		
0x00A1	0xFB      	MOV R3, A
;__Lib_Math.c,197 :: 		
0x00A2	0xED      	MOV A, R5
;__Lib_Math.c,198 :: 		
0x00A3	0xA4      	MUL AB
;__Lib_Math.c,199 :: 		
0x00A4	0x2A      	ADD A, R2
;__Lib_Math.c,200 :: 		
0x00A5	0xC9      	XCH A, R1
;__Lib_Math.c,201 :: 		
0x00A6	0x35F0    	ADDC A, B
;__Lib_Math.c,202 :: 		
0x00A8	0xFA      	MOV R2, A
;__Lib_Math.c,203 :: 		
0x00A9	0xE4      	CLR A
;__Lib_Math.c,204 :: 		
0x00AA	0x3B      	ADDC A, R3
;__Lib_Math.c,205 :: 		
0x00AB	0xFB      	MOV R3, A
;__Lib_Math.c,207 :: 		
0x00AC	0x22      	RET
; end of _Mul_32x32
_afiseaza_txt:
;deplasare_txt.c,40 :: 		void afiseaza_txt(char *text){
;deplasare_txt.c,41 :: 		Chip_Select = 0;           // select max7219
0x00AD	0xC291    	CLR P1_1_bit
;deplasare_txt.c,42 :: 		SPI1_write(8);             // selectie digit 8
0x00AF	0x752808  	MOV FARG_SPI1_Write_data_out, #8
0x00B2	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,43 :: 		SPI1_write(text[0]); // afis. caracter 1
0x00B4	0xA822    	MOV R0, FARG_afiseaza_txt_text
0x00B6	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x00B8	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,44 :: 		Chip_Select = 1;          // deselect max7219
0x00BA	0xD291    	SETB P1_1_bit
;deplasare_txt.c,46 :: 		Chip_Select = 0;          // select max7219
0x00BC	0xC291    	CLR P1_1_bit
;deplasare_txt.c,47 :: 		SPI1_write(7);            // selectie digit 7
0x00BE	0x752807  	MOV FARG_SPI1_Write_data_out, #7
0x00C1	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,48 :: 		SPI1_write(text[1]); // afis. caracter 2
0x00C3	0xE522    	MOV A, FARG_afiseaza_txt_text
0x00C5	0x2401    	ADD A, #1
0x00C7	0xF8      	MOV R0, A
0x00C8	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x00CA	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,49 :: 		Chip_Select = 1;          // deselect max7219
0x00CC	0xD291    	SETB P1_1_bit
;deplasare_txt.c,51 :: 		Chip_Select = 0;          // select max7219
0x00CE	0xC291    	CLR P1_1_bit
;deplasare_txt.c,52 :: 		SPI1_write(6);            // selectie digit 6
0x00D0	0x752806  	MOV FARG_SPI1_Write_data_out, #6
0x00D3	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,53 :: 		SPI1_write(text[2]); // afis. caracter 3
0x00D5	0xE522    	MOV A, FARG_afiseaza_txt_text
0x00D7	0x2402    	ADD A, #2
0x00D9	0xF8      	MOV R0, A
0x00DA	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x00DC	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,54 :: 		Chip_Select = 1;          // deselect max7219
0x00DE	0xD291    	SETB P1_1_bit
;deplasare_txt.c,56 :: 		Chip_Select = 0;          // select max7219
0x00E0	0xC291    	CLR P1_1_bit
;deplasare_txt.c,57 :: 		SPI1_write(5);            // selectie digit 5
0x00E2	0x752805  	MOV FARG_SPI1_Write_data_out, #5
0x00E5	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,58 :: 		SPI1_write(text[3]); // afis. caracter 4
0x00E7	0xE522    	MOV A, FARG_afiseaza_txt_text
0x00E9	0x2403    	ADD A, #3
0x00EB	0xF8      	MOV R0, A
0x00EC	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x00EE	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,59 :: 		Chip_Select = 1;          // deselect max7219
0x00F0	0xD291    	SETB P1_1_bit
;deplasare_txt.c,61 :: 		Chip_Select = 0;          // select max7219
0x00F2	0xC291    	CLR P1_1_bit
;deplasare_txt.c,62 :: 		SPI1_write(4);            // selectie digit 4
0x00F4	0x752804  	MOV FARG_SPI1_Write_data_out, #4
0x00F7	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,63 :: 		SPI1_write(text[4]); // afis. caracter 5
0x00F9	0xE522    	MOV A, FARG_afiseaza_txt_text
0x00FB	0x2404    	ADD A, #4
0x00FD	0xF8      	MOV R0, A
0x00FE	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x0100	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,64 :: 		Chip_Select = 1;          // deselect max7219
0x0102	0xD291    	SETB P1_1_bit
;deplasare_txt.c,66 :: 		Chip_Select = 0;          // select max7219
0x0104	0xC291    	CLR P1_1_bit
;deplasare_txt.c,67 :: 		SPI1_write(3);            // selectie digit 3
0x0106	0x752803  	MOV FARG_SPI1_Write_data_out, #3
0x0109	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,68 :: 		SPI1_write(text[5]); // afis. caracter 6
0x010B	0xE522    	MOV A, FARG_afiseaza_txt_text
0x010D	0x2405    	ADD A, #5
0x010F	0xF8      	MOV R0, A
0x0110	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x0112	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,69 :: 		Chip_Select = 1;          // deselect max7219
0x0114	0xD291    	SETB P1_1_bit
;deplasare_txt.c,71 :: 		Chip_Select = 0;          // select max7219
0x0116	0xC291    	CLR P1_1_bit
;deplasare_txt.c,72 :: 		SPI1_write(2);            // selectie digit 2
0x0118	0x752802  	MOV FARG_SPI1_Write_data_out, #2
0x011B	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,73 :: 		SPI1_write(text[6]); // afis. caracter 7
0x011D	0xE522    	MOV A, FARG_afiseaza_txt_text
0x011F	0x2406    	ADD A, #6
0x0121	0xF8      	MOV R0, A
0x0122	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x0124	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,74 :: 		Chip_Select = 1;          // deselect max7219
0x0126	0xD291    	SETB P1_1_bit
;deplasare_txt.c,76 :: 		Chip_Select = 0;          // select max7219
0x0128	0xC291    	CLR P1_1_bit
;deplasare_txt.c,77 :: 		SPI1_write(1);            // selectie digit 1
0x012A	0x752801  	MOV FARG_SPI1_Write_data_out, #1
0x012D	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,78 :: 		SPI1_write(text[7]); // afis. caracter 8
0x012F	0xE522    	MOV A, FARG_afiseaza_txt_text
0x0131	0x2407    	ADD A, #7
0x0133	0xF8      	MOV R0, A
0x0134	0x8628    	MOV FARG_SPI1_Write_data_out, @R0
0x0136	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,79 :: 		Chip_Select = 1;          // deselect max7219
0x0138	0xD291    	SETB P1_1_bit
;deplasare_txt.c,80 :: 		}
0x013A	0x22      	RET
; end of _afiseaza_txt
_VDelay_ms:
;__Lib_Delays.c,388 :: 		void VDelay_ms(unsigned Time_ms) {
;__Lib_Delays.c,391 :: 		NumberOfCyc = Clock_kHz()/12; // this will be done by compiler, no asm will be genereated except that for assignment;
0x013B	0x752441  	MOV VDelay_ms_NumberOfCyc_L0, #65
0x013E	0x752503  	MOV VDelay_ms_NumberOfCyc_L0+1, #3
0x0141	0x752600  	MOV VDelay_ms_NumberOfCyc_L0+2, #0
0x0144	0x752700  	MOV VDelay_ms_NumberOfCyc_L0+3, #0
;__Lib_Delays.c,392 :: 		NumberOfCyc = NumberOfCyc *  Time_ms;
0x0147	0x7841    	MOV R0, #65
0x0149	0x7903    	MOV R1, #3
0x014B	0x7A00    	MOV R2, #0
0x014D	0x7B00    	MOV R3, #0
0x014F	0xAC22    	MOV R4, FARG_VDelay_ms_Time_ms
0x0151	0xAD23    	MOV R5, FARG_VDelay_ms_Time_ms+1
0x0153	0xE4      	CLR A
0x0154	0xFE      	MOV R6, A
0x0155	0xE4      	CLR A
0x0156	0xF507    	MOV R7, A
0x0158	0x115E    	ACALL _Mul_32x32
0x015A	0x850024  	MOV VDelay_ms_NumberOfCyc_L0, 0
0x015D	0x850125  	MOV VDelay_ms_NumberOfCyc_L0+1, 1
0x0160	0x850226  	MOV VDelay_ms_NumberOfCyc_L0+2, 2
0x0163	0x850327  	MOV VDelay_ms_NumberOfCyc_L0+3, 3
;__Lib_Delays.c,393 :: 		NumberOfCyc = NumberOfCyc >> 5; // Dec and While below take around 32 instructions
0x0166	0x7C05    	MOV R4, #5
0x0168	0x112E    	ACALL __shr_longword
0x016A	0x850024  	MOV VDelay_ms_NumberOfCyc_L0, 0
0x016D	0x850125  	MOV VDelay_ms_NumberOfCyc_L0+1, 1
0x0170	0x850226  	MOV VDelay_ms_NumberOfCyc_L0+2, 2
0x0173	0x850327  	MOV VDelay_ms_NumberOfCyc_L0+3, 3
;__Lib_Delays.c,395 :: 		if (NumberOfCyc > 8)
0x0176	0xD3      	SETB C
0x0177	0xE8      	MOV A, R0
0x0178	0x9408    	SUBB A, #8
0x017A	0xE9      	MOV A, R1
0x017B	0x9400    	SUBB A, #0
0x017D	0xEA      	MOV A, R2
0x017E	0x9400    	SUBB A, #0
0x0180	0xEB      	MOV A, R3
0x0181	0x9400    	SUBB A, #0
0x0183	0x401B    	JC L_VDelay_ms2
;__Lib_Delays.c,396 :: 		NumberOfCyc -= 8;
0x0185	0xC3      	CLR C
0x0186	0xE524    	MOV A, VDelay_ms_NumberOfCyc_L0
0x0188	0x9408    	SUBB A, #8
0x018A	0xF524    	MOV VDelay_ms_NumberOfCyc_L0, A
0x018C	0xE525    	MOV A, VDelay_ms_NumberOfCyc_L0+1
0x018E	0x9400    	SUBB A, #0
0x0190	0xF525    	MOV VDelay_ms_NumberOfCyc_L0+1, A
0x0192	0xE526    	MOV A, VDelay_ms_NumberOfCyc_L0+2
0x0194	0x9400    	SUBB A, #0
0x0196	0xF526    	MOV VDelay_ms_NumberOfCyc_L0+2, A
0x0198	0xE527    	MOV A, VDelay_ms_NumberOfCyc_L0+3
0x019A	0x9400    	SUBB A, #0
0x019C	0xF527    	MOV VDelay_ms_NumberOfCyc_L0+3, A
0x019E	0x800C    	SJMP L_VDelay_ms3
L_VDelay_ms2:
;__Lib_Delays.c,398 :: 		NumberOfCyc = 0;
0x01A0	0x752400  	MOV VDelay_ms_NumberOfCyc_L0, #0
0x01A3	0x752500  	MOV VDelay_ms_NumberOfCyc_L0+1, #0
0x01A6	0x752600  	MOV VDelay_ms_NumberOfCyc_L0+2, #0
0x01A9	0x752700  	MOV VDelay_ms_NumberOfCyc_L0+3, #0
L_VDelay_ms3:
;__Lib_Delays.c,400 :: 		while (NumberOfCyc)             //  while loop takes 32 cycles
L_VDelay_ms4:
0x01AC	0xE524    	MOV A, VDelay_ms_NumberOfCyc_L0
0x01AE	0x4525    	ORL A, VDelay_ms_NumberOfCyc_L0+1
0x01B0	0x4526    	ORL A, VDelay_ms_NumberOfCyc_L0+2
0x01B2	0x4527    	ORL A, VDelay_ms_NumberOfCyc_L0+3
0x01B4	0x6026    	JZ L_VDelay_ms5
;__Lib_Delays.c,402 :: 		--NumberOfCyc;              //
0x01B6	0xC3      	CLR C
0x01B7	0xE524    	MOV A, VDelay_ms_NumberOfCyc_L0
0x01B9	0x9401    	SUBB A, #1
0x01BB	0xF524    	MOV VDelay_ms_NumberOfCyc_L0, A
0x01BD	0xE525    	MOV A, VDelay_ms_NumberOfCyc_L0+1
0x01BF	0x9400    	SUBB A, #0
0x01C1	0xF525    	MOV VDelay_ms_NumberOfCyc_L0+1, A
0x01C3	0xE526    	MOV A, VDelay_ms_NumberOfCyc_L0+2
0x01C5	0x9400    	SUBB A, #0
0x01C7	0xF526    	MOV VDelay_ms_NumberOfCyc_L0+2, A
0x01C9	0xE527    	MOV A, VDelay_ms_NumberOfCyc_L0+3
0x01CB	0x9400    	SUBB A, #0
0x01CD	0xF527    	MOV VDelay_ms_NumberOfCyc_L0+3, A
;__Lib_Delays.c,403 :: 		asm nop;                    //
0x01CF	0x00      	NOP
;__Lib_Delays.c,404 :: 		asm nop;                    //
0x01D0	0x00      	NOP
;__Lib_Delays.c,405 :: 		asm nop;                    //
0x01D1	0x00      	NOP
;__Lib_Delays.c,407 :: 		asm nop;                    //
0x01D2	0x00      	NOP
;__Lib_Delays.c,408 :: 		asm nop;                    //
0x01D3	0x00      	NOP
;__Lib_Delays.c,409 :: 		asm nop;                    //
0x01D4	0x00      	NOP
;__Lib_Delays.c,411 :: 		asm nop;                    //
0x01D5	0x00      	NOP
;__Lib_Delays.c,412 :: 		asm nop;                    //
0x01D6	0x00      	NOP
;__Lib_Delays.c,413 :: 		asm nop;                    //
0x01D7	0x00      	NOP
;__Lib_Delays.c,415 :: 		asm nop;                    //
0x01D8	0x00      	NOP
;__Lib_Delays.c,416 :: 		asm nop;                    //
0x01D9	0x00      	NOP
;__Lib_Delays.c,417 :: 		}
0x01DA	0x80D0    	SJMP L_VDelay_ms4
L_VDelay_ms5:
;__Lib_Delays.c,418 :: 		}
0x01DC	0x22      	RET
; end of _VDelay_ms
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x01DD	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x01DE	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x01DF	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x01E0	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x01E1	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x01E2	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x01E4	0x22      	RET
; end of ___CC2D
_dreapta:
;deplasare_txt.c,128 :: 		void dreapta()
;deplasare_txt.c,129 :: 		{if (oprire==0){
0x01E5	0xE519    	MOV A, _oprire
0x01E7	0x7049    	JNZ L_dreapta25
;deplasare_txt.c,130 :: 		temp_char=text[15];
0x01E9	0x853F18  	MOV _temp_char, _text+15
;deplasare_txt.c,131 :: 		for (d=15; d>0; d--){
0x01EC	0x75110F  	MOV _d, #15
0x01EF	0x751200  	MOV _d+1, #0
L_dreapta26:
0x01F2	0xD3      	SETB C
0x01F3	0xE511    	MOV A, _d
0x01F5	0x9400    	SUBB A, #0
0x01F7	0xE512    	MOV A, _d+1
0x01F9	0x9400    	SUBB A, #0
0x01FB	0x4025    	JC L_dreapta27
;deplasare_txt.c,132 :: 		text[d]=text[d-1];}
0x01FD	0x7430    	MOV A, lo_addr(_text)
0x01FF	0x2511    	ADD A, _d
0x0201	0xF8      	MOV R0, A
0x0202	0xC3      	CLR C
0x0203	0xE511    	MOV A, _d
0x0205	0x9401    	SUBB A, #1
0x0207	0xF9      	MOV R1, A
0x0208	0xE512    	MOV A, _d+1
0x020A	0x9400    	SUBB A, #0
0x020C	0xFA      	MOV R2, A
0x020D	0x7430    	MOV A, lo_addr(_text)
0x020F	0x29      	ADD A, R1
0x0210	0xF9      	MOV R1, A
0x0211	0xE7      	MOV A, @R1
0x0212	0xF6      	MOV @R0, A
;deplasare_txt.c,131 :: 		for (d=15; d>0; d--){
0x0213	0xC3      	CLR C
0x0214	0xE511    	MOV A, _d
0x0216	0x9401    	SUBB A, #1
0x0218	0xF511    	MOV _d, A
0x021A	0xE512    	MOV A, _d+1
0x021C	0x9400    	SUBB A, #0
0x021E	0xF512    	MOV _d+1, A
;deplasare_txt.c,132 :: 		text[d]=text[d-1];}
0x0220	0x80D0    	SJMP L_dreapta26
L_dreapta27:
;deplasare_txt.c,133 :: 		text[0]=temp_char;
0x0222	0x851830  	MOV _text, _temp_char+0
;deplasare_txt.c,134 :: 		afiseaza_txt(text);
0x0225	0x752230  	MOV FARG_afiseaza_txt_text, #_text+0
0x0228	0x11AD    	ACALL _afiseaza_txt
;deplasare_txt.c,135 :: 		vdelay_ms(viteza);}}
0x022A	0x851F22  	MOV FARG_VDelay_ms_Time_ms, _viteza+0
0x022D	0x852023  	MOV FARG_VDelay_ms_Time_ms+1, _viteza+1
0x0230	0x313B    	ACALL _VDelay_ms
L_dreapta25:
0x0232	0x22      	RET
; end of _dreapta
_UART1_Init:
;__Lib_UART_Timer1.c,15 :: 		
;__Lib_UART_Timer1.c,16 :: 		
0x0233	0x750815  	MOV _UART_Wr_Ptr, #_UART1_Write+0
0x0236	0x750903  	MOV _UART_Wr_Ptr+1, hi(#_UART1_Write+0)
0x0239	0x750A21  	MOV _UART_Wr_Ptr+2, #FARG_UART1_Write_data_+0
;__Lib_UART_Timer1.c,17 :: 		
0x023C	0x750E22  	MOV _UART_Rd_Ptr, #_UART1_Read+0
0x023F	0x750F03  	MOV _UART_Rd_Ptr+1, hi(#_UART1_Read+0)
0x0242	0x751000  	MOV _UART_Rd_Ptr+2, 0
;__Lib_UART_Timer1.c,18 :: 		
0x0245	0x751A5B  	MOV _UART_Rdy_Ptr, #_UART1_Data_Ready+0
0x0248	0x751B02  	MOV _UART_Rdy_Ptr+1, hi(#_UART1_Data_Ready+0)
0x024B	0x751C00  	MOV _UART_Rdy_Ptr+2, 0
;__Lib_UART_Timer1.c,21 :: 		
0x024E	0x759850  	MOV SCON, #80
;__Lib_UART_Timer1.c,22 :: 		
0x0251	0x758780  	MOV PCON, #128
;__Lib_UART_Timer1.c,23 :: 		
0x0254	0x758840  	MOV TCON, #64
;__Lib_UART_Timer1.c,24 :: 		
0x0257	0x758920  	MOV TMOD, #32
;__Lib_UART_Timer1.c,25 :: 		
0x025A	0x22      	RET
; end of _UART1_Init
_UART1_Data_Ready:
;__Lib_UART_Timer1.c,35 :: 		
;__Lib_UART_Timer1.c,36 :: 		
0x025B	0xA298    	MOV C, SCON.B0
0x025D	0xE4      	CLR A
0x025E	0x33      	RLC A
0x025F	0xF8      	MOV R0, A
;__Lib_UART_Timer1.c,37 :: 		
0x0260	0x22      	RET
; end of _UART1_Data_Ready
_max7219_init1:
;deplasare_txt.c,14 :: 		void max7219_init1() {
;deplasare_txt.c,15 :: 		Chip_Select = 0;           // SELECT MAX
0x0261	0xC291    	CLR P1_1_bit
;deplasare_txt.c,16 :: 		SPI1_write(0x09);
0x0263	0x752809  	MOV FARG_SPI1_Write_data_out, #9
0x0266	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,17 :: 		SPI1_write(0x00);             // Raw mode for digit decoding
0x0268	0x752800  	MOV FARG_SPI1_Write_data_out, #0
0x026B	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,18 :: 		Chip_Select = 1;           // DESELECT MAX
0x026D	0xD291    	SETB P1_1_bit
;deplasare_txt.c,20 :: 		Chip_Select = 0;           // SELECT MAX
0x026F	0xC291    	CLR P1_1_bit
;deplasare_txt.c,21 :: 		SPI1_write(0x0A);
0x0271	0x75280A  	MOV FARG_SPI1_Write_data_out, #10
0x0274	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,22 :: 		SPI1_write(0x0F);          // Segment luminosity intensity
0x0276	0x75280F  	MOV FARG_SPI1_Write_data_out, #15
0x0279	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,23 :: 		Chip_Select = 1;           // DESELECT MAX
0x027B	0xD291    	SETB P1_1_bit
;deplasare_txt.c,25 :: 		Chip_Select = 0;           // SELECT MAX
0x027D	0xC291    	CLR P1_1_bit
;deplasare_txt.c,26 :: 		SPI1_write(0x0B);
0x027F	0x75280B  	MOV FARG_SPI1_Write_data_out, #11
0x0282	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,27 :: 		SPI1_write(0x07);          // Display refresh - toti digitii
0x0284	0x752807  	MOV FARG_SPI1_Write_data_out, #7
0x0287	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,28 :: 		Chip_Select = 1;           // DESELECT MAX
0x0289	0xD291    	SETB P1_1_bit
;deplasare_txt.c,30 :: 		Chip_Select = 0;           // SELECT MAX
0x028B	0xC291    	CLR P1_1_bit
;deplasare_txt.c,31 :: 		SPI1_write(0x0C);
0x028D	0x75280C  	MOV FARG_SPI1_Write_data_out, #12
0x0290	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,32 :: 		SPI1_write(0x01);          // Turn on the display
0x0292	0x752801  	MOV FARG_SPI1_Write_data_out, #1
0x0295	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,33 :: 		Chip_Select = 1;           // DESELECT MAX
0x0297	0xD291    	SETB P1_1_bit
;deplasare_txt.c,35 :: 		Chip_Select = 0;           // SELECT MAX
0x0299	0xC291    	CLR P1_1_bit
;deplasare_txt.c,36 :: 		SPI1_write(0x00);
0x029B	0x752800  	MOV FARG_SPI1_Write_data_out, #0
0x029E	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,37 :: 		SPI1_write(0xFF);          // No test
0x02A0	0x7528FF  	MOV FARG_SPI1_Write_data_out, #255
0x02A3	0x1141    	ACALL _SPI1_Write
;deplasare_txt.c,38 :: 		Chip_Select = 1;           // DESELECT MAX
0x02A5	0xD291    	SETB P1_1_bit
;deplasare_txt.c,39 :: 		}
0x02A7	0x22      	RET
; end of _max7219_init1
_SPI1_Init:
;__Lib_SPI_SPCR.c,33 :: 		
;__Lib_SPI_SPCR.c,34 :: 		
0x02A8	0x7513FF  	MOV _SPI_Rd_Ptr, #_SPI1_Read+0
0x02AB	0x7514FF  	MOV _SPI_Rd_Ptr+1, hi(#_SPI1_Read+0)
0x02AE	0x7515FF  	MOV _SPI_Rd_Ptr+2, #FARG_SPI1_Read_data_out+0
;__Lib_SPI_SPCR.c,35 :: 		
0x02B1	0x750B41  	MOV _SPI_Wr_Ptr, #_SPI1_Write+0
0x02B4	0x750C00  	MOV _SPI_Wr_Ptr+1, hi(#_SPI1_Write+0)
0x02B7	0x750D28  	MOV _SPI_Wr_Ptr+2, #FARG_SPI1_Write_data_out+0
;__Lib_SPI_SPCR.c,39 :: 		
0x02BA	0x75D513  	MOV SPCR, #19
;__Lib_SPI_SPCR.c,43 :: 		
0x02BD	0x53AAFE  	ANL SPSR, #254
;__Lib_SPI_SPCR.c,44 :: 		
0x02C0	0x00      	NOP
;__Lib_SPI_SPCR.c,48 :: 		
0x02C1	0xD3      	SETB C
0x02C2	0xE5D5    	MOV A, SPCR
0x02C4	0x92E6    	MOV #224.B6, C
0x02C6	0xF5D5    	MOV SPCR, A
;__Lib_SPI_SPCR.c,49 :: 		
0x02C8	0x22      	RET
; end of _SPI1_Init
_stanga:
;deplasare_txt.c,120 :: 		void stanga()
;deplasare_txt.c,121 :: 		{if (oprire==0){
0x02C9	0xE519    	MOV A, _oprire
0x02CB	0x7047    	JNZ L_stanga21
;deplasare_txt.c,122 :: 		temp_char=text[0];
0x02CD	0x853018  	MOV _temp_char, _text+0
;deplasare_txt.c,123 :: 		for (s=0; s<15; s++){
0x02D0	0x751D00  	MOV _s, #0
0x02D3	0x751E00  	MOV _s+1, #0
L_stanga22:
0x02D6	0xC3      	CLR C
0x02D7	0xE51D    	MOV A, _s
0x02D9	0x940F    	SUBB A, #15
0x02DB	0xE51E    	MOV A, _s+1
0x02DD	0x9400    	SUBB A, #0
0x02DF	0x5023    	JNC L_stanga23
;deplasare_txt.c,124 :: 		text[s]=text[s+1];}
0x02E1	0x7430    	MOV A, lo_addr(_text)
0x02E3	0x251D    	ADD A, _s
0x02E5	0xF8      	MOV R0, A
0x02E6	0x7401    	MOV A, #1
0x02E8	0x251D    	ADD A, _s
0x02EA	0xF9      	MOV R1, A
0x02EB	0x7400    	MOV A, #0
0x02ED	0x351E    	ADDC A, _s+1
0x02EF	0xFA      	MOV R2, A
0x02F0	0x7430    	MOV A, lo_addr(_text)
0x02F2	0x29      	ADD A, R1
0x02F3	0xF9      	MOV R1, A
0x02F4	0xE7      	MOV A, @R1
0x02F5	0xF6      	MOV @R0, A
;deplasare_txt.c,123 :: 		for (s=0; s<15; s++){
0x02F6	0x7401    	MOV A, #1
0x02F8	0x251D    	ADD A, _s
0x02FA	0xF51D    	MOV _s, A
0x02FC	0x7400    	MOV A, #0
0x02FE	0x351E    	ADDC A, _s+1
0x0300	0xF51E    	MOV _s+1, A
;deplasare_txt.c,124 :: 		text[s]=text[s+1];}
0x0302	0x80D2    	SJMP L_stanga22
L_stanga23:
;deplasare_txt.c,125 :: 		text[15]=temp_char;
0x0304	0x85183F  	MOV _text+15, _temp_char+0
;deplasare_txt.c,126 :: 		afiseaza_txt(text);
0x0307	0x752230  	MOV FARG_afiseaza_txt_text, #_text+0
0x030A	0x11AD    	ACALL _afiseaza_txt
;deplasare_txt.c,127 :: 		vdelay_ms(viteza);}}
0x030C	0x851F22  	MOV FARG_VDelay_ms_Time_ms, _viteza+0
0x030F	0x852023  	MOV FARG_VDelay_ms_Time_ms+1, _viteza+1
0x0312	0x313B    	ACALL _VDelay_ms
L_stanga21:
0x0314	0x22      	RET
; end of _stanga
_UART1_Write:
;__Lib_UART_Timer1.c,27 :: 		
;__Lib_UART_Timer1.c,28 :: 		
0x0315	0xC299    	CLR SCON.B1
;__Lib_UART_Timer1.c,29 :: 		
0x0317	0x852199  	MOV SBUF, FARG_UART1_Write_data_+0
;__Lib_UART_Timer1.c,30 :: 		
L_UART1_Write0:
0x031A	0x209902  	JB SCON.B1, L_UART1_Write1
;__Lib_UART_Timer1.c,31 :: 		
0x031D	0x80FB    	SJMP L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_Timer1.c,32 :: 		
0x031F	0xC299    	CLR SCON.B1
;__Lib_UART_Timer1.c,33 :: 		
0x0321	0x22      	RET
; end of _UART1_Write
_UART1_Read:
;__Lib_UART_Timer1.c,39 :: 		
;__Lib_UART_Timer1.c,40 :: 		
0x0322	0xC298    	CLR SCON.B0
;__Lib_UART_Timer1.c,41 :: 		
0x0324	0xA899    	MOV R0, SBUF
;__Lib_UART_Timer1.c,42 :: 		
0x0326	0x22      	RET
; end of _UART1_Read
_main:
0x0327	0x758180  	MOV SP, #128
0x032A	0x120445  	LCALL 1093
;deplasare_txt.c,82 :: 		void main() {
;deplasare_txt.c,83 :: 		viteza=100;
0x032D	0x751F64  	MOV _viteza, #100
0x0330	0x752000  	MOV _viteza+1, #0
;deplasare_txt.c,84 :: 		oprire=0;
0x0333	0x751900  	MOV _oprire, #0
;deplasare_txt.c,85 :: 		s=0;
0x0336	0x751D00  	MOV _s, #0
0x0339	0x751E00  	MOV _s+1, #0
;deplasare_txt.c,87 :: 		UART1_Init(4800);               // Initializare modul UART1
0x033C	0x438780  	ORL PCON, #128
0x033F	0x758DF5  	MOV TH1, #245
0x0342	0x758BF5  	MOV TL1, #245
0x0345	0x5133    	ACALL _UART1_Init
;deplasare_txt.c,88 :: 		delay_ms(100);                 // Asteptare stabilizare UART
0x0347	0x7EA3    	MOV R6, 163
0x0349	0x7F1E    	MOV R7, 30
0x034B	0xDFFE    	DJNZ R7, PC-2
0x034D	0xDEFC    	DJNZ R6, PC-4
0x034F	0x00      	NOP
;deplasare_txt.c,90 :: 		SPI1_init();      // Initializare SPI module
0x0350	0x51A8    	ACALL _SPI1_Init
;deplasare_txt.c,91 :: 		max7219_init1();  // initializare  max7219
0x0352	0x5161    	ACALL _max7219_init1
;deplasare_txt.c,92 :: 		afiseaza_txt(text);
0x0354	0x752230  	MOV FARG_afiseaza_txt_text, #_text+0
0x0357	0x11AD    	ACALL _afiseaza_txt
;deplasare_txt.c,94 :: 		while(1) {
L_main0:
;deplasare_txt.c,95 :: 		if(UART1_Data_Ready())
0x0359	0x515B    	ACALL _UART1_Data_Ready
0x035B	0xE8      	MOV A, R0
0x035C	0x600A    	JZ L_main2
;deplasare_txt.c,97 :: 		caracter_sosit = UART1_Read();
0x035E	0x7122    	ACALL _UART1_Read
0x0360	0x850017  	MOV _caracter_sosit, 0
;deplasare_txt.c,98 :: 		UART1_Write(caracter_sosit);  //Este trimis inapoi ca un ecou
0x0363	0x850021  	MOV FARG_UART1_Write_data_, 0
0x0366	0x7115    	ACALL _UART1_Write
;deplasare_txt.c,99 :: 		}
L_main2:
;deplasare_txt.c,101 :: 		switch(caracter_sosit)          //Test caracter sosit
0x0368	0x8050    	SJMP L_main3
;deplasare_txt.c,103 :: 		case 'A': oprire=1; afiseaza_txt(afis_on);  break;
L_main5:
0x036A	0x751901  	MOV _oprire, #1
0x036D	0x752240  	MOV FARG_afiseaza_txt_text, #_afis_on+0
0x0370	0x11AD    	ACALL _afiseaza_txt
0x0372	0x61EA    	AJMP L_main4
;deplasare_txt.c,104 :: 		case 'S': oprire=1; afiseaza_txt(afis_off);  break;
L_main6:
0x0374	0x751901  	MOV _oprire, #1
0x0377	0x752248  	MOV FARG_afiseaza_txt_text, #_afis_off+0
0x037A	0x11AD    	ACALL _afiseaza_txt
0x037C	0x61EA    	AJMP L_main4
;deplasare_txt.c,105 :: 		case 'P': oprire=0; break;
L_main7:
0x037E	0x751900  	MOV _oprire, #0
0x0381	0x61EA    	AJMP L_main4
;deplasare_txt.c,106 :: 		case 'O': oprire=1; break;
L_main8:
0x0383	0x751901  	MOV _oprire, #1
0x0386	0x61EA    	AJMP L_main4
;deplasare_txt.c,107 :: 		case 'F': if(viteza>10) viteza-=10; break;
L_main9:
0x0388	0xD3      	SETB C
0x0389	0xE51F    	MOV A, _viteza
0x038B	0x940A    	SUBB A, #10
0x038D	0xE520    	MOV A, _viteza+1
0x038F	0x9400    	SUBB A, #0
0x0391	0x400D    	JC L_main10
0x0393	0xC3      	CLR C
0x0394	0xE51F    	MOV A, _viteza
0x0396	0x940A    	SUBB A, #10
0x0398	0xF51F    	MOV _viteza, A
0x039A	0xE520    	MOV A, _viteza+1
0x039C	0x9400    	SUBB A, #0
0x039E	0xF520    	MOV _viteza+1, A
L_main10:
0x03A0	0x8048    	SJMP L_main4
;deplasare_txt.c,108 :: 		case 'W': viteza+=10; break;
L_main11:
0x03A2	0x740A    	MOV A, #10
0x03A4	0x251F    	ADD A, _viteza
0x03A6	0xF51F    	MOV _viteza, A
0x03A8	0x7400    	MOV A, #0
0x03AA	0x3520    	ADDC A, _viteza+1
0x03AC	0xF520    	MOV _viteza+1, A
0x03AE	0x803A    	SJMP L_main4
;deplasare_txt.c,109 :: 		case 'L': comanda=caracter_sosit;  break;
L_main12:
0x03B0	0x851716  	MOV _comanda, _caracter_sosit+0
0x03B3	0x8035    	SJMP L_main4
;deplasare_txt.c,110 :: 		case 'R': comanda=caracter_sosit;  break;
L_main13:
0x03B5	0x851716  	MOV _comanda, _caracter_sosit+0
0x03B8	0x8030    	SJMP L_main4
;deplasare_txt.c,111 :: 		}
L_main3:
0x03BA	0xE517    	MOV A, _caracter_sosit
0x03BC	0x6441    	XRL A, #65
0x03BE	0x60AA    	JZ L_main5
0x03C0	0xE517    	MOV A, _caracter_sosit
0x03C2	0x6453    	XRL A, #83
0x03C4	0x60AE    	JZ L_main6
0x03C6	0xE517    	MOV A, _caracter_sosit
0x03C8	0x6450    	XRL A, #80
0x03CA	0x60B2    	JZ L_main7
0x03CC	0xE517    	MOV A, _caracter_sosit
0x03CE	0x644F    	XRL A, #79
0x03D0	0x60B1    	JZ L_main8
0x03D2	0xE517    	MOV A, _caracter_sosit
0x03D4	0x6446    	XRL A, #70
0x03D6	0x60B0    	JZ L_main9
0x03D8	0xE517    	MOV A, _caracter_sosit
0x03DA	0x6457    	XRL A, #87
0x03DC	0x60C4    	JZ L_main11
0x03DE	0xE517    	MOV A, _caracter_sosit
0x03E0	0x644C    	XRL A, #76
0x03E2	0x60CC    	JZ L_main12
0x03E4	0xE517    	MOV A, _caracter_sosit
0x03E6	0x6452    	XRL A, #82
0x03E8	0x60CB    	JZ L_main13
L_main4:
;deplasare_txt.c,112 :: 		caracter_sosit='y';
0x03EA	0x751779  	MOV _caracter_sosit, #121
;deplasare_txt.c,113 :: 		if(oprire==0){
0x03ED	0xE519    	MOV A, _oprire
0x03EF	0x7030    	JNZ L_main14
;deplasare_txt.c,114 :: 		switch(comanda) {
0x03F1	0x8016    	SJMP L_main15
;deplasare_txt.c,115 :: 		case 'L': stanga();  break;
L_main17:
0x03F3	0x51C9    	ACALL _stanga
0x03F5	0x802A    	SJMP L_main16
;deplasare_txt.c,116 :: 		case 'R': dreapta();  break;
L_main18:
0x03F7	0x31E5    	ACALL _dreapta
0x03F9	0x8026    	SJMP L_main16
;deplasare_txt.c,117 :: 		case 'A': afiseaza_txt(afis_on);  break;
L_main19:
0x03FB	0x752240  	MOV FARG_afiseaza_txt_text, #_afis_on+0
0x03FE	0x11AD    	ACALL _afiseaza_txt
0x0400	0x801F    	SJMP L_main16
;deplasare_txt.c,118 :: 		case 'S': afiseaza_txt(afis_off);  break;
L_main20:
0x0402	0x752248  	MOV FARG_afiseaza_txt_text, #_afis_off+0
0x0405	0x11AD    	ACALL _afiseaza_txt
0x0407	0x8018    	SJMP L_main16
;deplasare_txt.c,119 :: 		}}}}
L_main15:
0x0409	0xE516    	MOV A, _comanda
0x040B	0x644C    	XRL A, #76
0x040D	0x60E4    	JZ L_main17
0x040F	0xE516    	MOV A, _comanda
0x0411	0x6452    	XRL A, #82
0x0413	0x60E2    	JZ L_main18
0x0415	0xE516    	MOV A, _comanda
0x0417	0x6441    	XRL A, #65
0x0419	0x60E0    	JZ L_main19
0x041B	0xE516    	MOV A, _comanda
0x041D	0x6453    	XRL A, #83
0x041F	0x60E1    	JZ L_main20
L_main16:
L_main14:
0x0421	0x6159    	AJMP L_main0
0x0423	0x80FE    	SJMP #254
; end of _main
0x0445	0x7830    	MOV R0, 48
0x0447	0x7920    	MOV R1, 32
0x0449	0x758225  	MOV DPL, 37
0x044C	0x758304  	MOV DPH, 4
0x044F	0x1201DD  	LCALL 477
0x0452	0x22      	RET
;deplasare_txt.c,0 :: ?ICS_text
0x0425	0x67065B ;?ICS_text+0
0x0428	0x064E3E ;?ICS_text+3
0x042B	0x0F4F00 ;?ICS_text+6
0x042E	0x000000 ;?ICS_text+9
0x0431	0x000000 ;?ICS_text+12
0x0434	0x00 ;?ICS_text+15
; end of ?ICS_text
;deplasare_txt.c,0 :: ?ICS_afis_on
0x0435	0xFFFFFF ;?ICS_afis_on+0
0x0438	0xFFFFFF ;?ICS_afis_on+3
0x043B	0xFFFF ;?ICS_afis_on+6
; end of ?ICS_afis_on
;deplasare_txt.c,0 :: ?ICS_afis_off
0x043D	0x000000 ;?ICS_afis_off+0
0x0440	0x000000 ;?ICS_afis_off+3
0x0443	0x0000 ;?ICS_afis_off+6
; end of ?ICS_afis_off
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002E      [19]    __shr_longword
0x0041      [29]    _SPI1_Write
0x005E      [79]    _Mul_32x32
0x00AD     [142]    _afiseaza_txt
0x013B     [162]    _VDelay_ms
0x01DD       [8]    ___CC2D
0x01E5      [78]    _dreapta
0x0233      [40]    _UART1_Init
0x025B       [6]    _UART1_Data_Ready
0x0261      [71]    _max7219_init1
0x02A8      [33]    _SPI1_Init
0x02C9      [76]    _stanga
0x0315      [13]    _UART1_Write
0x0322       [5]    _UART1_Read
0x0327     [254]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [3]    _UART_Wr_Ptr
0x000B       [3]    _SPI_Wr_Ptr
0x000E       [3]    _UART_Rd_Ptr
0x0011       [2]    _d
0x0013       [3]    _SPI_Rd_Ptr
0x0016       [1]    _comanda
0x0017       [1]    _caracter_sosit
0x0018       [1]    _temp_char
0x0019       [1]    _oprire
0x001A       [3]    _UART_Rdy_Ptr
0x001D       [2]    _s
0x001F       [2]    _viteza
0x0021       [1]    FARG_UART1_Write_data_
0x0022       [1]    FARG_afiseaza_txt_text
0x0022       [2]    FARG_VDelay_ms_Time_ms
0x0024       [4]    VDelay_ms_NumberOfCyc_L0
0x0028       [1]    FARG_SPI1_Write_data_out
0x0029       [1]    SPI1_Write_tmp_L0
0x0030      [16]    _text
0x0040       [8]    _afis_on
0x0048       [8]    _afis_off
0x0080       [0]    P0_2_bit
0x0080       [0]    P0_3_bit
0x0080       [0]    P0_1_bit
0x0080       [1]    P0
0x0080       [0]    P0_0_bit
0x0080       [0]    P0_6_bit
0x0080       [0]    P0_7_bit
0x0080       [0]    P0_5_bit
0x0080       [0]    P0_4_bit
0x0081       [1]    SP
0x0082       [2]    DPTR
0x0082       [1]    DP0L
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0083       [1]    DP0H
0x0084       [1]    DP1L
0x0085       [1]    DP1H
0x0086       [0]    SPD3_bit
0x0086       [0]    SPD5_bit
0x0086       [0]    SPD7_bit
0x0086       [0]    SPD6_bit
0x0086       [0]    SPD4_bit
0x0086       [1]    SPDR
0x0086       [0]    SPD0_bit
0x0086       [0]    SPD2_bit
0x0086       [0]    SPD1_bit
0x0087       [0]    GF0_bit
0x0087       [0]    PD_bit
0x0087       [0]    PWDEX_bit
0x0087       [0]    SMOD1_bit
0x0087       [0]    GF1_bit
0x0087       [0]    POF_bit
0x0087       [0]    IDL_bit
0x0087       [1]    PCON
0x0087       [0]    SMOD0_bit
0x0088       [0]    TF0_bit
0x0088       [0]    TR1_bit
0x0088       [0]    TF1_bit
0x0088       [0]    IT1_bit
0x0088       [0]    IE0_bit
0x0088       [0]    IE1_bit
0x0088       [0]    TR0_bit
0x0088       [0]    IT0_bit
0x0088       [1]    TCON
0x0089       [0]    C_T0_bit
0x0089       [0]    M00_bit
0x0089       [0]    M10_bit
0x0089       [1]    TMOD
0x0089       [0]    M11_bit
0x0089       [0]    C_T1_bit
0x0089       [0]    GATE1_bit
0x0089       [0]    M01_bit
0x0089       [0]    GATE0_bit
0x008A       [1]    TL0
0x008B       [1]    TL1
0x008C       [1]    TH0
0x008D       [1]    TH1
0x008E       [0]    Intel_Pwd_Exit_bit
0x008E       [1]    AUXR
0x008E       [0]    DISALE_bit
0x008F       [1]    CLKREG
0x008F       [0]    X2_bit
0x0090       [0]    P1_6_bit
0x0090       [0]    P1_5_bit
0x0090       [0]    P1_0_bit
0x0090       [0]    P1_7_bit
0x0090       [0]    P1_2_bit
0x0090       [0]    P1_1_bit
0x0090       [0]    P1_4_bit
0x0090       [0]    P1_3_bit
0x0090       [1]    P1
0x0090       [0]    Chip_Select
0x0096       [0]    EELD_bit
0x0096       [0]    EEMWE_bit
0x0096       [0]    EEMEN_bit
0x0096       [0]    RDY_BSY_bit
0x0096       [0]    DPS_bit
0x0096       [1]    EECON
0x0096       [0]    WRTINH_bit
0x0098       [0]    SM1_bit
0x0098       [0]    SM2_bit
0x0098       [0]    REN_bit
0x0098       [0]    SM0_FE_bit
0x0098       [0]    RI_bit
0x0098       [0]    TI_bit
0x0098       [1]    SCON
0x0098       [0]    TB8_bit
0x0098       [0]    RB8_bit
0x0099       [1]    SBUF
0x00A0       [0]    P2_1_bit
0x00A0       [0]    P2_6_bit
0x00A0       [0]    P2_7_bit
0x00A0       [1]    P2
0x00A0       [0]    P2_0_bit
0x00A0       [0]    P2_2_bit
0x00A0       [0]    P2_4_bit
0x00A0       [0]    P2_5_bit
0x00A0       [0]    P2_3_bit
0x00A6       [1]    WDTRST
0x00A7       [0]    PS1_bit
0x00A7       [0]    PS2_bit
0x00A7       [0]    WSWRST_bit
0x00A7       [1]    WDTCON
0x00A7       [0]    WDTEN_bit
0x00A7       [0]    HWDT_bit
0x00A7       [0]    PS0_bit
0x00A7       [0]    WDIDLE_bit
0x00A7       [0]    DISRTO_bit
0x00A8       [0]    ET1_bit
0x00A8       [0]    EA_bit
0x00A8       [0]    ET2_bit
0x00A8       [0]    ES_bit
0x00A8       [0]    EX0_bit
0x00A8       [1]    IE
0x00A8       [0]    EX1_bit
0x00A8       [0]    ET0_bit
0x00A9       [1]    SADDR
0x00AA       [0]    LDEN_bit
0x00AA       [0]    WCOL_bit
0x00AA       [0]    SPIF_bit
0x00AA       [1]    SPSR
0x00AA       [0]    ENH_bit
0x00AA       [0]    DISSO_bit
0x00B0       [0]    P3_1_bit
0x00B0       [0]    P3_4_bit
0x00B0       [0]    P3_3_bit
0x00B0       [0]    P3_2_bit
0x00B0       [0]    P3_5_bit
0x00B0       [0]    P3_0_bit
0x00B0       [1]    P3
0x00B0       [0]    P3_6_bit
0x00B0       [0]    P3_7_bit
0x00B7       [0]    PSH_bit
0x00B7       [0]    PT2H_bit
0x00B7       [0]    PT0H_bit
0x00B7       [0]    PX0H_bit
0x00B7       [1]    IPH
0x00B7       [0]    PX1H_bit
0x00B7       [0]    PT1H_bit
0x00B8       [1]    IP
0x00B8       [0]    PT0_bit
0x00B8       [0]    PX0_bit
0x00B8       [0]    PT2_bit
0x00B8       [0]    PX1_bit
0x00B8       [0]    PT1_bit
0x00B8       [0]    PS_bit
0x00B9       [1]    SADEN
0x00C8       [0]    EXEN2_bit
0x00C8       [0]    TCLK_bit
0x00C8       [0]    RCLK_bit
0x00C8       [0]    TR2_bit
0x00C8       [1]    T2CON
0x00C8       [0]    CP_RL2_bit
0x00C8       [0]    C_T2_bit
0x00C8       [0]    EXF2_bit
0x00C8       [0]    TF2_bit
0x00C9       [0]    DCEN_bit
0x00C9       [0]    T2OE_bit
0x00C9       [1]    T2MOD
0x00CA       [1]    RCAP2L
0x00CB       [1]    RCAP2H
0x00CC       [1]    TL2
0x00CD       [1]    TH2
0x00D0       [0]    OV_bit
0x00D0       [0]    F1_bit
0x00D0       [1]    PSW
0x00D0       [0]    P_bit
0x00D0       [0]    F0_bit
0x00D0       [0]    CY_bit
0x00D0       [0]    AC_bit
0x00D0       [0]    RS1_bit
0x00D0       [0]    RS0_bit
0x00D5       [0]    CPOL_bit
0x00D5       [0]    CPHA_bit
0x00D5       [0]    SPR1_bit
0x00D5       [0]    SPR0_bit
0x00D5       [0]    SPE_bit
0x00D5       [0]    DORD_bit
0x00D5       [0]    MSTR_bit
0x00D5       [1]    SPCR
0x00D5       [0]    SPIE_bit
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0425      [16]    ?ICS_text
0x0435       [8]    ?ICS_afis_on
0x043D       [8]    ?ICS_afis_off
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_stanga21
  L_stanga22
  L_stanga23
  L_stanga24
  L_dreapta25
  L_dreapta26
  L_dreapta27
  L_dreapta28
  _max7219_init1
  _afiseaza_txt
  _main
  _stanga
  _dreapta
  L_Delay_Cyc0
  L_Delay_Cyc1
  L_VDelay_ms2
  L_VDelay_ms3
  L_VDelay_ms4
  L_VDelay_ms5
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_10ms
  _Delay_100ms
  _Delay_1sec
  _Delay_Cyc
  _VDelay_ms
  lab_end
  loop_lab
  lab_end1
  lab_loop1
  lab_end2
  lab_loop3
  __Div_8x8_S_Bpositive
  __Div_8x8_S_Apositive
  __Div_8x8_S_Skip_Div
  __Div_8x8_S_div_ret
  __op2hi_not_zero
  __op1hi_not_zero
  __Div_16x16_U_Loop1
  __Div_16x16_U_Lab1
  __Div_16x16_U_div_ret
  __Div_16x16_U_Loop2
  __Div_16x16_U_Lab2
  __Div_16x16_U_Lab3
  __Div_16x16_S_op2hipositive
  __Div_16x16_S_op1hipositive
  __Div_16x16_S_Skip_Udiv
  __Div_16x16_S_div_ret
  __Div_32x32_U_start
  __Div_32x32_U_aux
  __Div_32x32_U_l2
  __Div_32x32_U_l1
  lw_1
  lw_2
  __Div_32x32_U_l3
  lw_3
  __Div_32x32_U_l4
  __Div_32x32_U_IR_l0
  __Div_32x32_U_l5
  __Div_32x32_U_l6
  __Div_32x32_U_l8
  __Div_32x32_U_l7
  __Div_32x32_U_IR_l1
  __Div_32x32_U_l10
  __Div_32x32_U_l9
  __Div_32x32_U_IR_l2
  __Div_32x32_S_l1
  __Div_32x32_S_call_uns
  __Div_32x32_S_l2
  __Div_32x32_S_l3
  __Div_32x32_S_div_ret
  __shl_long
  __shr_longint
  __shr_longword
  _Mul_16x16
  _Mul_32x32
  _Div_8x8_S
  _Div_16x16_U
  _Div_16x16_S
  _Div_32x32_U
  _Div_32x32_S
  L_SPI1_Write0
  L_SPI1_Write1
  L_SPI1_Write2
  L_SPI1_Write3
  L_SPI1_Write4
  L_SPI1_Read5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Read8
  L_SPI1_Read9
  _SPI1_Init_Advanced
  _SPI1_Init
  _SPI1_Write
  _SPI1_Read
  _SPI_Set_Active
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
  L_UART1_Write0
  L_UART1_Write1
  L_UART1_Write_Text2
  L_UART1_Write_Text3
  L_UART1_Read_Text4
  L_UART1_Read_Text5
  L_UART1_Read_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  _UART1_Init
  _UART1_Write
  _UART1_Data_Ready
  _UART1_Read
  _UART1_Write_Text
  _UART1_Read_Text
  _UART_Set_Active
